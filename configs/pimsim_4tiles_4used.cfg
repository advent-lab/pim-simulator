#Total number of chips in the system
n_chips = 1

#Number of tiles in a chip
#tiles in the simulator == core in the pimra terminology
#This is also equal to the number of instruction streams in the system 
#There is 1 controller per core/tile. So, each chip has n_tiles number of controllers.
#This value is calculated as follows:
n_tiles = 128

#Number of tiles used by a workload.
#Typical values of this are:
# - n_tiles, implying all tiles are used
# - 1, implying only 1 tile is used
n_tiles_used = 128
meshHeight = 32
meshWidth = 4

#Number of blocks in a tile
#This is equal to the number of blocks that can be fed by DRAM at one time
#This value is calculated as follows:
#Number of blocks = wordsize_dram / (n_cols (or n_rows)) (we assume n_cols==n_rows)
#For htree type of connectivity, we want number of blocks in a tile to be a multiple of 4
#assert(n_block%4==0)
#assert(n_blocks == n_tiles)
n_blocks = 4

#Number of columns and rows in one block of memory (CRAM)
#assert(_ncols==_nrows)
n_cols = 256
n_rows = 256

#Clock frequency (in Hz)
clock_rate = 1000000000

#Architecture of the interconnect between various blocks
#Values can be: ideal, bus, htree, mesh, DynaMesh
mem_configuration = DynaMesh
#Bandwidth between various blocks.
#No use of having wordsize_block2block be larger than the number of columns in a RAM
#That's because we can only read 1 row (i.e. number of bits = number of columns in the RAM) at a time
#Meaning, we can only send 1 row at a time from one block to another.
wordsize_block2block = 256

#Bandwidth between various tiles.
wordsize_tile2tile = 1024

#Bandwidth between a chip (containing CRAMs) and a DRAM
wordsize_dram = 32768

dram_row_open_latency = 10

dram_bank_number = 4

#Minimum number of bits that are loaded from DRAM to RF (similar to cache_line_size)
rf_chunk_size = 512

num_regs_per_rf = 32
num_bits_per_reg = 32

popcount_pipeline_stages = 5
